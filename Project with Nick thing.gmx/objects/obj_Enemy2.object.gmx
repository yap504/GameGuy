<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Enemy2</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_ColParent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[0] = 6.5

//Mass stuff
mass = sprite_width * sprite_height

hp = 2

Shoot_Cooldown = 50
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/* Facing */
image_angle = point_direction(x,y,obj_Player.x,obj_Player.y)

/* Movement */
if (point_distance(obj_Enemy2.x,obj_Enemy2.y,obj_Player.x,obj_Player.y)&gt;200) {
    move_towards_point(obj_Player.x,obj_Player.y,3)

}
if (point_distance(obj_Enemy2.x,obj_Enemy2.y,obj_Player.x,obj_Player.y)&lt;200) {
    speed = 0
}

/* Firing Restriction */

Shoot_Cooldown -= 1;                                 //Lower the shooting cooldown timer
if (Shoot_Cooldown &lt; 0) then Shoot_Cooldown = 0     //Prevents timer from counting down           further than 0.
target_distance = distance_to_object(obj_Player);    //Distance to the player from enemy.

if (target_distance &lt; 200)                 //If player within the range of enemy
{
//image_angle = point_direction(x,y,obj_player.x,obj_player.y);      //Enemy faces the player.
if (Shoot_Cooldown == 0)                                      //If enemy can shoot (cooldown ready)
    {
    bullet = instance_create(x,y,obj_Shoot2);                  //Create a bullet relative to enemy
    bullet.direction = point_direction(x,y,obj_Player.x,obj_Player.y);   //Shoot it towards player
    bullet.speed = 8;                                           //Give it speed
    Shoot_Cooldown = 50;    //Set the new cooldown time between low and high thresholds.
    }
}

/* Combat */

IncomingBullet = instance_place(x,y,obj_Bullet)

if place_meeting(x,y,obj_Bullet) hp -= 1

if (hp = 0) { 
    instance_create(x,y,obj_Enemy3)    
    instance_destroy()
}
if instance_exists(IncomingBullet) {

//Destroy the bullet
with IncomingBullet 
instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_ColParent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>EnemyCollision()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
